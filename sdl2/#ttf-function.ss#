(define-sdl-func (* sdl-surface-t) sttf-render-text-solid ((font (* ttf-font)) (text string) (fg (* sdl-color-t))) "STTF_RenderText_Solid")
(define-sdl-func (* sdl-surface-t) sttf-render-ut-f8-solid ((font (* ttf-font)) (text string) (fg (* sdl-color-t))) "STTF_RenderUTF8_Solid")
(define-sdl-func (* sdl-surface-t) sttf-render-unicode-solid ((font (* ttf-font)) (text (* uint16)) (fg (* sdl-color-t))) "STTF_RenderUNICODE_Solid")
(define-sdl-func (* sdl-surface-t) sttf-render-glyph-solid ((font (* ttf-font)) (ch uint16) (fg (* sdl-color-t))) "STTF_RenderGlyph_Solid")
(define-sdl-func (* sdl-surface-t) sttf-render-text-shaded ((font (* ttf-font)) (text string) (fg (* sdl-color-t)) (bg (* sdl-color-t))) "STTF_RenderText_Shaded")
(define-sdl-func (* sdl-surface-t) sttf-render-ut-f8-shaded ((font (* ttf-font)) (text string) (fg (* sdl-color-t)) (bg (* sdl-color-t))) "STTF_RenderUTF8_Shaded")
(define-sdl-func (* sdl-surface-t) sttf-render-unicode-shaded ((font (* ttf-font)) (text (* uint16)) (fg (* sdl-color-t)) (bg (* sdl-color-t))) "STTF_RenderUNICODE_Shaded")
(define-sdl-func (* sdl-surface-t) sttf-render-glyph-shaded ((font (* ttf-font)) (ch uint16) (fg (* sdl-color-t)) (bg (* sdl-color-t))) "STTF_RenderGlyph_Shaded")
(define-sdl-func (* sdl-surface-t) sttf-render-text-blended ((font (* ttf-font)) (text string) (fg (* sdl-color-t))) "STTF_RenderText_Blended")
(define-sdl-func (* sdl-surface-t) sttf-render-ut-f8-blended ((font (* ttf-font)) (text string) (fg (* sdl-color-t))) "STTF_RenderUTF8_Blended")
(define-sdl-func (* sdl-surface-t) sttf-render-unicode-blended ((font (* ttf-font)) (text (* uint16)) (fg (* sdl-color-t))) "STTF_RenderUNICODE_Blended")
(define-sdl-func (* sdl-surface-t) sttf-render-text-blended-wrapped ((font (* ttf-font)) (text string) (fg (* sdl-color-t)) (wrapLength uint32)) "STTF_RenderText_Blended_Wrapped")
(define-sdl-func (* sdl-surface-t) sttf-render-ut-f8-blended-wrapped ((font (* ttf-font)) (text string) (fg (* sdl-color-t)) (wrapLength uint32)) "STTF_RenderUTF8_Blended_Wrapped")
(define-sdl-func (* sdl-surface-t) sttf-render-unicode-blended-wrapped ((font (* ttf-font)) (text (* uint16)) (fg (* sdl-color-t)) (wrapLength uint32)) "STTF_RenderUNICODE_Blended_Wrapped")
(define-sdl-func (* sdl-surface-t) sttf-render-glyph-blended ((font (* ttf-font)) (ch uint16) (fg (* sdl-color-t))) "STTF_RenderGlyph_Blended")
(define-sdl-func (* sdl-version-t) ttf-linked-version () "TTF_Linked_Version")
(define-sdl-func void ttf-byte-swapped-unicode ((swapped int)) "TTF_ByteSwappedUNICODE")
(define-sdl-func int ttf-init () "TTF_Init")
(define-sdl-func (* ttf-font) ttf-open-font ((file string) (ptsize int)) "TTF_OpenFont")
(define-sdl-func (* ttf-font) ttf-open-font-index ((file string) (ptsize int) (index long)) "TTF_OpenFontIndex")
(define-sdl-func (* ttf-font) ttf-open-font-rw ((src (* sdl-rw-ops-t)) (freesrc int) (ptsize int)) "TTF_OpenFontRW")
(define-sdl-func (* ttf-font) ttf-open-font-index-rw ((src (* sdl-rw-ops-t)) (freesrc int) (ptsize int) (index long)) "TTF_OpenFontIndexRW")
(define-sdl-func int ttf-get-font-style ((font (* ttf-font))) "TTF_GetFontStyle")
(define-sdl-func void ttf-set-font-style ((font (* ttf-font)) (style int)) "TTF_SetFontStyle")
(define-sdl-func int ttf-get-font-outline ((font (* ttf-font))) "TTF_GetFontOutline")
(define-sdl-func void ttf-set-font-outline ((font (* ttf-font)) (outline int)) "TTF_SetFontOutline")
(define-sdl-func int ttf-get-font-hinting ((font (* ttf-font))) "TTF_GetFontHinting")
(define-sdl-func void ttf-set-font-hinting ((font (* ttf-font)) (hinting int)) "TTF_SetFontHinting")
(define-sdl-func int ttf-font-height ((font (* ttf-font))) "TTF_FontHeight")
(define-sdl-func int ttf-font-ascent ((font (* ttf-font))) "TTF_FontAscent")
(define-sdl-func int ttf-font-descent ((font (* ttf-font))) "TTF_FontDescent")
(define-sdl-func int ttf-font-line-skip ((font (* ttf-font))) "TTF_FontLineSkip")
(define-sdl-func int ttf-get-font-kerning ((font (* ttf-font))) "TTF_GetFontKerning")
(define-sdl-func void ttf-set-font-kerning ((font (* ttf-font)) (allowed int)) "TTF_SetFontKerning")
(define-sdl-func long ttf-font-faces ((font (* ttf-font))) "TTF_FontFaces")
(define-sdl-func int ttf-font-face-is-fixed-width ((font (* ttf-font))) "TTF_FontFaceIsFixedWidth")
(define-sdl-func string ttf-font-face-family-name ((font (* ttf-font))) "TTF_FontFaceFamilyName")
(define-sdl-func string ttf-font-face-style-name ((font (* ttf-font))) "TTF_FontFaceStyleName")
(define-sdl-func int ttf-glyph-is-provided ((font (* ttf-font)) (ch uint16)) "TTF_GlyphIsProvided")
(define-sdl-func int ttf-glyph-metrics ((font (* ttf-font)) (ch uint16) (minx (* int)) (maxx (* int)) (miny (* int)) (maxy (* int)) (advance (* int))) "TTF_GlyphMetrics")
(define-sdl-func int ttf-size-text ((font (* ttf-font)) (text string) (w (* int)) (h (* int))) "TTF_SizeText")
(define-sdl-func int ttf-size-ut-f8 ((font (* ttf-font)) (text string) (w (* int)) (h (* int))) "TTF_SizeUTF8")
(define-sdl-func int ttf-size-unicode ((font (* ttf-font)) (text (* uint16)) (w (* int)) (h (* int))) "TTF_SizeUNICODE")
(define-sdl-func void ttf-close-font ((font (* ttf-font))) "TTF_CloseFont")
(define-sdl-func void ttf-quit () "TTF_Quit")
(define-sdl-func int ttf-was-init () "TTF_WasInit")
(define-sdl-func int ttf-get-font-kerning-size ((font (* ttf-font)) (prev_index int) (index int)) "TTF_GetFontKerningSize")
(define-sdl-func int ttf-get-font-kerning-size-glyphs ((font (* ttf-font)) (previous_ch uint16) (ch uint16)) "TTF_GetFontKerningSizeGlyphs")

